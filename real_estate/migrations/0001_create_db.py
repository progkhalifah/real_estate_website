# Generated by Django 5.0.6 on 2024-06-17 15:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TblPropertyCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_city', models.CharField(max_length=250, verbose_name='Property City')),
            ],
            options={
                'verbose_name': 'Property City',
                'verbose_name_plural': 'Properties City',
            },
        ),
        migrations.CreateModel(
            name='TblPropertyCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_country', models.CharField(max_length=250, verbose_name='Property Country')),
            ],
            options={
                'verbose_name': 'Property Country',
                'verbose_name_plural': 'Properties Country',
            },
        ),
        migrations.CreateModel(
            name='TblPropertyFor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_for', models.CharField(max_length=250, verbose_name='Property For')),
            ],
            options={
                'verbose_name': 'Property For',
                'verbose_name_plural': 'Properties For',
            },
        ),
        migrations.CreateModel(
            name='TblTypeProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_type_property', models.CharField(max_length=250, verbose_name='Name Type Property')),
            ],
            options={
                'verbose_name': 'Type Property',
                'verbose_name_plural': 'Types Properties',
            },
        ),
        migrations.CreateModel(
            name='TblCustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TblPropertyListing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title_property', models.CharField(max_length=250, verbose_name='Title Property')),
                ('image_property', models.ImageField(upload_to='uploads/images/property_listing', verbose_name='Image Property')),
                ('location_property', models.TextField()),
                ('size_property', models.IntegerField(verbose_name='Size Property')),
                ('beds_property', models.IntegerField(verbose_name='Beds Property')),
                ('bath_property', models.IntegerField(verbose_name='Bath Property')),
                ('price_property', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Price Property')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('city_property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='real_estate.tblpropertycity', verbose_name='City Property')),
                ('country_property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='real_estate.tblpropertycountry', verbose_name='Country Property')),
                ('property_for', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='real_estate.tblpropertyfor', verbose_name='Property For')),
                ('property_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='real_estate.tbltypeproperty', verbose_name='Property Type')),
            ],
        ),
        migrations.CreateModel(
            name='TblPropertyImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images_property', models.FileField(upload_to='uploads/images/property_listing', verbose_name='Images Property')),
                ('property_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='real_estate.tblpropertylisting')),
            ],
        ),
    ]
